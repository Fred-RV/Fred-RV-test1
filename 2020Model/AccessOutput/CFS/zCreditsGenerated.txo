*
* zCreditsGenerated.txo
*
Select Output zCreditsGenerated.log
*
Open Segment "2020.xeq"
Read Segment Main, Do(Compile)
*
OpenDB
*
Define Variable
zCreditsGenerated(Area,Year) 'Emission Intensity Credits Needed (Tonnes/Yr)',
 Disk(SOutput,CreditsGenerated(Area,Year)) 
zCreditsGeneratedRef(Area,Year) 'Emission Intensity Credits Needed (Tonnes/Yr)',
 Disk(SOutput,CreditsGenerated(Area,Year)) 
ANMap(Area,Nation)  'Map between Area and Nation (Map)',  
  Disk(SInput,ANMap(Area,Nation))
*
Conversion(Nation,Year) 'Units Conversion Factor'
UnitsDS(Nation)    'Units Description', Type=String(40)
CCC      'Variable for Displaying Outputs', Type=Real(15,6)
ZZZ      'Variable for Displaying Outputs', Type=Real(15,6)
*
End Define Variable
*
Conversion(N,Y)=1
UnitsDS(N)=" Tonnes/Yr"
*
***********************
Define Procedure DtaRun
*
OutFil="zCreditsGenerated-"+NatKey::0+"-"+SceName::0+".dta"
*
Select Output OutFil, Width=1300, Printer=On, Comma=Off
*
*
Do If (BaseSW eq 0)
  FText1=InitialName::0+Slash::0+"SOutput.dba"
  Open SOutput FText1
  Read Disk(zCreditsGeneratedRef)
  Open SOutput "SOutput.dba"
End Do If (BaseSW eq 0)
*
Write ("Variable;Year;Area;Units;zData;zInitial")
*
Select Year(1-EndYear)
Select Area*
Select Area If ANMap eq 1
*
Do Area
  Do Year
    ZZZ=zCreditsGenerated*Conversion
    CCC=zCreditsGeneratedRef*Conversion
    Do If (ZZZ ne 0) or (CCC ne 0)
      Write ("zCreditsGenerated;", Year,";", AreaDS::0,";", ECCDS::0,";",FuelDS::0,";", CDTime::0,UnitsDS::0,";", ZZZ:15:e, ";" , CCC:15:e)
    End Do If
  End Do Year
End Do Area
*
End Procedure DtaRun
*
***********************
*
Select Nation(CN,US)
Do Nation
  Do If NationOutputMap eq 1   
    DtaRun
  End Do If NationOutputMap eq 1         
End Do Nation
Select Nation*
*
CloseDB
*
Select Output zCreditsGenerated.log
Write (OutFil, " has completed successfully.")
Stop Promula
